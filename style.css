/* Dark Mode */

textarea::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.24);
}
textarea::-webkit-scrollbar-thumb:hover {
  background-color: rgba(0, 0, 0, 0.28);
}
textarea::-webkit-scrollbar-track {
  background-color: var(--light0);
}
#title, .featured, .featured::after {
  color: var(--dark0);
}
#byLine {
  color: var(--dark1);
  -webkit-text-decoration-color: var(--dark1);
          text-decoration-color: var(--dark1);
}
#byLine:hover, #byLine:focus-visible {
  background-color: rgba(255, 255, 255, 0.1);
} 



/* Light Mode */

@media (prefers-color-scheme: light) {
  #title, .featured, .featured::after {
    color: var(--light1);
  }
  #byLine {
    color: var(--light2);
    -webkit-text-decoration-color: var(--light2);
            text-decoration-color: var(--light2);
  }
  #byLine:hover, #byLine:focus-visible {
    background-color: rgba(0, 0, 0, 0.1);
  }
}


/* Header */

header {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.2rem;
  background-image: var(--primary);
  padding: 1rem 1rem 0.5rem 1rem;
}
#title {
  text-align: center;
}
#byLine {
  display: inline-block;
  height: 3rem;
  padding: 0.8rem 1rem 0.6rem 1rem;
  border-radius: 1.5rem;
  transition: background-color 200ms;
  text-align: center;
}



/* playerOperator */

#playerOperator {
  padding: 1rem;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}
#playerOperator button {
  height: 3rem;
  padding: 0.75rem 1rem 0.65rem 1rem;
}



/* Gradient button */

.featured {
  background-image: var(--primary);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.featured::before, .featured::after {
  position: absolute;
  transition: opacity 200ms;
  opacity: 0;
  border-radius: 1.5rem;
}
.featured::before{
  content: "";
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-image: var(--secondary);
}
.featured:hover::before, .featured:focus-visible::before, .featured:hover::after, .featured:focus-visible::after {
  opacity: 1;
}



/* Main */

main {
  margin: auto;
  padding: 1rem;
  display: none;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  width: 100%;
  max-width: 75ch;
  box-sizing: border-box;
}
#responses, #players {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
}
h3, h4 {
  margin: 0;
}



/* Displays */

#responseDisplay, #playerDisplay {
  display: flex;
  gap: 0.5rem;
  width: 100%;
}
#responseDisplay {
  flex-direction: column;
}
#playerDisplay {
  flex-wrap: wrap;
}



/* Buttons */

button, .response, .player {
  cursor: pointer;
}
input, button, .response, .player {
  transition: background-color 200ms;
}
input:hover, input:focus-visible, button:hover, button:focus-visible, .response:hover, .response:focus-visible, .player:hover, .player:focus-visible {
  background-color: var(--dark2);
}



/* Responses and players */

.response {
  background-color: var(--dark1);
  border-radius: 0.5rem;
  padding: 0.5rem 1rem 0.5rem 1rem;
}
.player {
  flex: 1;
  background-color: var(--dark1);
  border-radius: 0.5rem;
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: center;
}
p {
  margin: 0;
  overflow-wrap: break-word;
}
.player.buttonHover {
  background-color: var(--dark1);
}
.player div {
  display: flex;
  gap: 0.25rem;
}
.restrictOptions .player div {
  display: none;
}
.player button {
  padding: 0.2rem 0.5rem 0.15rem 0.5rem;
  background-color: var(--dark2);
}
.player:hover button, .player:focus-visible button {
  background-color: var(--dark3);
}



/* Inputs */

form, .options {
  margin: 0;
  width: 100%;
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  flex-wrap: wrap;
}
.restrictOptions .options {
  display: none;
}
input, button {
  border: none;
  border-radius: 1.5rem;
  background-color: var(--dark1);
  color: var(--light0);
}
form input[type=text] {
  flex: 1;
}
#responseInput button::after {
  content: "Submit";
}
#playerInput button::after {
  content: "Add";
}
button {
  line-height: 1.25rem;
  padding: 0.5rem 0.75rem 0.45rem 0.75rem;
}
.response.clicked, .player.clicked {
  opacity: 0.25;
}
#responseInput input, #responseInput button {
  line-height: 1.6rem;
  padding: 0.75rem 1rem 0.65rem 1rem;
}
#playerInput input, #playerInput button {
  line-height: 1rem;
  padding: 0.5rem 0.75rem 0.4rem 0.75rem;
}
.restrictOptions #playerInput {
  display: none;
}
